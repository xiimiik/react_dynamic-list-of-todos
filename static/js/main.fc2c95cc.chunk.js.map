{"version":3,"sources":["api.ts","types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","getUser","userId","TodoList","todos","onSelect","selectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","setQuery","filterType","setFilterType","value","onChange","event","target","Active","Completed","All","placeholder","style","pointerEvents","Loader","TodoModal","onClose","useState","user","setUser","loadUsers","a","userFromServer","useEffect","href","email","name","App","setTodos","isTodosLoaded","setIsTodosLoaded","setSelectedTodo","getTodosFromServer","todosFromServer","filter","titleToLowerCase","toLowerCase","queryToLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc2c95cc.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  onSelect: (todo: Todo) => void\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames('', {\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('far', {\n                        'fa-eye-slash': selectedTodo?.id === id,\n                        'fa-eye': selectedTodo?.id !== id,\n                      })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterType } from '../../types/FilterType';\n\ntype Props = {\n  query: string\n  setQuery: (input: string) => void\n  filterType: FilterType\n  setFilterType: (value: FilterType) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filterType,\n  setFilterType,\n}) => {\n  const handleSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case FilterType.Active:\n        setFilterType(FilterType.Active);\n        break;\n\n      case FilterType.Completed:\n        setFilterType(FilterType.Completed);\n        break;\n\n      default:\n        setFilterType(FilterType.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={handleSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n  onClose: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const loadUsers = async () => {\n    const userFromServer = await getUser(userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/FilterType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isTodosLoaded, setIsTodosLoaded] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState(FilterType.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const getTodosFromServer = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setIsTodosLoaded(true);\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const filterTodos = () => {\n    const todosMatchedQuery = todos.filter(({ title }) => {\n      const titleToLowerCase = title.toLowerCase();\n      const queryToLowerCase = query.toLowerCase();\n\n      return titleToLowerCase.includes(queryToLowerCase);\n    });\n\n    return todosMatchedQuery.filter(todo => {\n      switch (filterType) {\n        case FilterType.Active:\n          return !todo.completed;\n\n        case FilterType.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterType={filterType}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded ? (\n                <TodoList\n                  todos={filterTodos()}\n                  onSelect={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}